%Figure
% first figure will probably be some sort of methods figure
%fig 2 will likely be raw data - either like your 2015 paper or perhaps
%Irene's Fig 1
%maybe there would be a panel for metrics like acceleration - put shading
%around them - actually see explanation below I like that better


%don't forget your controls
%10 and 15 min poststim
%flex-ex






% I used this function to look at raw data traces for each subject from gen2 and gen3 side by
% side - appear to be the same so I will use gen3 for now
%% BEFORE DECIDING ON FIG 2, I WOULD GO THROUGH THIS ONE MORE TIME AND LOOK
%% THROUGH ALL SUBJECTS AGAIN - JUST DO A FOR LOOP AND PLOT THEM ALL AT ONE
%% TIME
nr_eeg_anal_sum_01_data_vis_01('22')
43,13,17
22 for stim very nice
    20 for nonstim nice
%Next i plotted gen 3 beside .fig generated by allen's script
%just commented out the gen 2 code and added open .fig code

nr_eeg_anal_sum_01_data_vis_01('30')


% Next i will recreate allen's figure and statistics for the metrics
%% THIS IS THE DATA THAT ANDREA NEEDS!!!!
could plot all 12 acceleration curves then an average
then below that curves for all 4 phases
then could plot this for the 2 cs stim patients
then perhaps for all 4 groups then show overall line plots with stats





% fig 1 
% methods fig - I would show still shots of the video
% fig 2
% task in detail
% %fig 3
%I would say maybe the eeg here
% show raw data of stim - need to show REALLY CLEAN example
% then one of nonstim
% fig 4
%metrics for the different groups

%now the metrics
%I believe this is subject3 - this is vel
figure; hold on
subplot(2,2,1)
hold on
plot(trialData.vr(1).tracker.p.right(1700:2100,1))
plot(trialData.vr(1).tracker.v.right(1700:2100,1))
title('prestim')

subplot(2,2,2)
hold on
plot(trialData.vr(2).tracker.p.right(650:1000,1))
plot(trialData.vr(2).tracker.v.right(650:1000,1))
title('intra5')

subplot(2,2,3)
hold on
plot(trialData.vr(3).tracker.p.right(950:1250,1)*-1)
plot(trialData.vr(3).tracker.v.right(950:1250,1)*-1)
title('intra15*-1')

subplot(2,2,4)
hold on
plot(trialData.vr(4).tracker.p.right(1000:1300,1))
plot(trialData.vr(4).tracker.v.right(1000:1300,1))
title('post5')

%I believe this is subject3 - this is vel+accel
figure; hold on
subplot(2,2,1)
hold on
plot(trialData.vr(1).tracker.p.right(1700:2100,1))
plot(trialData.vr(1).tracker.v.right(1700:2100,1))
plot(trialData.vr(1).tracker.a.right(1700:2100,1))
title('prestim')

subplot(2,2,2)
hold on
plot(trialData.vr(2).tracker.p.right(650:1000,1))
plot(trialData.vr(2).tracker.v.right(650:1000,1))
plot(trialData.vr(2).tracker.a.right(650:1000,1))
title('intra5')

subplot(2,2,3)
hold on
plot(trialData.vr(3).tracker.p.right(950:1250,1)*-1)
plot(trialData.vr(3).tracker.v.right(950:1250,1)*-1)
plot(trialData.vr(3).tracker.a.right(950:1250,1)*-1)
title('intra15*-1')

subplot(2,2,4)
hold on
plot(trialData.vr(4).tracker.p.right(1000:1300,1))
plot(trialData.vr(4).tracker.v.right(1000:1300,1))
plot(trialData.vr(4).tracker.a.right(1000:1300,1))
title('post5')
load('~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_0003/analysis/S2-metrics/pro00087153_0003_S2-Metrics.mat')
% 
mean(metricdatraw.data{1,5}(:,1))
mean(metricdatraw.data{1,5}(:,2))
mean(metricdatraw.data{1,5}(:,3))
mean(metricdatraw.data{1,5}(:,4))
%confirmed these are the same between the metricdatraw variable 
%with the individual reaches and the metricdat variable with the 
%averages, let me spot check one more
load('~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_0020/analysis/S2-metrics/pro00087153_0020_S2-Metrics.mat')
mean(metricdatraw.data{1,9}(:,1))
mean(metricdatraw.data{1,9}(:,2))
mean(metricdatraw.data{1,9}(:,3))
mean(metricdatraw.data{1,9}(:,4))
%confirmed, now I will plot individual

sbjs=['03';'04';'05';'42';'43';'13';'15';'17';'18';'21']
sbjs=['22';'24';'25';'26';'29';'30';'20';'23';'27';'28';'36']
figure
set(gcf,'Position',[35 230 1285 715])
for i=1:11
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs(i,:),'_S2-Metrics.mat'')'])
    for j=2:13
        subplot(2,6,j-1); hold on
        plot(metricdat.data{1,j}(1:4),'Marker','o','MarkerSize',10,'LineWidth',2)
        set(gca,'XTick',[1:4],'XTickLabel',['BL';'ES';'LS';'PS'])
        title(metricdat.label{1,j})
    end
end
%I checked this plot against Allen's stroke individual.jpg plot and it
%looks the same
%also checked hc, those look good as well

%just checking to make sure bl,es,ls and ps are indices 1-4
sbjs='30'%went through each subject 1 by 1
eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs,'/analysis/S2-metrics/pro00087153_00',sbjs,'_S2-Metrics.mat'')'])
trialData.sessioninfo.trialnames
%metricdat.data{1,2}
clear
%looks good, now time to generate the grp plots



sbjs_cs_stm=['03';'04';'05';'42';'43']
for i=1:5
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_cs_stm(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_cs_stm(i,:),'_S2-Metrics.mat'')'])
    for j=1:13
        for k=1:4
            eval(['cs_stm_kin',num2str(j),'(i,k)=metricdat.data{1,j}(k)'])
        end
    end
    clear t* s2* move* metric*
end

sbjs_cs_non=['13';'15';'17';'18';'21']
for i=1:5
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_cs_non(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_cs_non(i,:),'_S2-Metrics.mat'')'])
    for j=1:13
        for k=1:4
            eval(['cs_non_kin',num2str(j),'(i,k)=metricdat.data{1,j}(k)'])
        end
    end
    clear t* s2* move* metric*
end

sbjs_hc_stm=['22';'24';'25';'26';'29';'30']
for i=1:6
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_hc_stm(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_hc_stm(i,:),'_S2-Metrics.mat'')'])
    for j=1:13
        for k=1:4
            eval(['hc_stm_kin',num2str(j),'(i,k)=metricdat.data{1,j}(k)'])
        end
    end
    clear t* s2* move* metric*
end

sbjs_hc_non=['20';'23';'27';'28';'36']
for i=1:5
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_hc_non(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_hc_non(i,:),'_S2-Metrics.mat'')'])
    for j=1:13
        for k=1:4
            eval(['hc_non_kin',num2str(j),'(i,k)=metricdat.data{1,j}(k)'])
        end
    end
    clear t* s2* move* metric*
end
        
for i=1:13
    eval(['mean_kin',num2str(i),'_cs_stm=mean(cs_stm_kin',num2str(i),')'])
    eval(['se_kin',num2str(i),'_cs_stm=std(cs_stm_kin',num2str(i),')/sqrt(5)'])
    
    eval(['mean_kin',num2str(i),'_cs_non=mean(cs_non_kin',num2str(i),')'])
    eval(['se_kin',num2str(i),'_cs_non=std(cs_non_kin',num2str(i),')/sqrt(5)'])
    
    eval(['mean_kin',num2str(i),'_hc_stm=mean(hc_stm_kin',num2str(i),')'])
    eval(['se_kin',num2str(i),'_hc_stm=std(hc_stm_kin',num2str(i),')/sqrt(6)'])
    
    eval(['mean_kin',num2str(i),'_hc_non=mean(hc_non_kin',num2str(i),')'])
    eval(['se_kin',num2str(i),'_hc_non=std(hc_non_kin',num2str(i),')/sqrt(5)'])
end
    
    
figure % this is for cs group - looks exact same as allen's
set(gcf,'Position',[35 230 1285 715])
%for i=1:10
    %eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs(i,:),'_S2-Metrics.mat'')'])
    for j=2:13
        subplot(2,6,j-1); hold on
        eval(['plot(mean_kin',num2str(j),'_cs_stm,''g'')'])
        eval(['errorbar(mean_kin',num2str(j),'_cs_stm,se_kin',num2str(j),'_cs_stm,''g'')'])
        eval(['plot(mean_kin',num2str(j),'_cs_non,''r'')'])
        eval(['errorbar(mean_kin',num2str(j),'_cs_non,se_kin',num2str(j),'_cs_non,''r'')'])
        %plot(metricdat.data{1,j}(1:4),'Marker','o','MarkerSize',10,'LineWidth',2)
        set(gca,'XTick',[1:4],'XTickLabel',['BL';'ES';'LS';'PS'])
        %title(metricdat.label{1,j})
    end
%end

figure%compared to allen's healthy group and looks exactly same
set(gcf,'Position',[35 230 1285 715])
%for i=1:10
    %eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs(i,:),'_S2-Metrics.mat'')'])
    for j=2:13
        subplot(2,6,j-1); hold on
        eval(['plot(mean_kin',num2str(j),'_hc_stm,''g'')'])
        eval(['errorbar(mean_kin',num2str(j),'_hc_stm,se_kin',num2str(j),'_hc_stm,''g'')'])
        eval(['plot(mean_kin',num2str(j),'_hc_non,''r'')'])
        eval(['errorbar(mean_kin',num2str(j),'_hc_non,se_kin',num2str(j),'_hc_non,''r'')'])
        %plot(metricdat.data{1,j}(1:4),'Marker','o','MarkerSize',10,'LineWidth',2)
        set(gca,'XTick',[1:4],'XTickLabel',['BL';'ES';'LS';'PS'])
        %title(metricdat.label{1,j})
    end
    
%now let's try some stats

grps=['cs_stm';'cs_non';'hc_stm';'hc_non']
for i=1:4
    for j=1%:13
        eval(['[p_',grps(i,:),'_kin',num2str(j),',tbl_',grps(i,:),'_kin',num2str(j),...
            ',stats_',grps(i,:),'_kin',num2str(j),']=anova1(',grps(i,:),'_kin',num2str(j),')'])
    end
end
%ok tried cs_non_kin1 and anova1 agrees with graphpad
%let me quickly test if the individual values give same p value

ind=[1:12;13:24;25:36;37:48;49:60]'
sbjs_cs_stm=['03';'04';'05';'42';'43']
for i=1:5
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_cs_stm(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_cs_stm(i,:),'_S2-Metrics.mat'')'])
    for j=1:4
        all_cs_stm_kin1(ind(:,i),j)=metricdatraw.data{1,1}(:,j)
    end
    clear t* s2* move* metric*
end

group=['1';'1';'1';'1';'1';'1';'1';'1';'1';'1';'1';'1';
       '2';'2';'2';'2';'2';'2';'2';'2';'2';'2';'2';'2';
       '3';'3';'3';'3';'3';'3';'3';'3';'3';'3';'3';'3';
       '4';'4';'4';'4';'4';'4';'4';'4';'4';'4';'4';'4';
       '5';'5';'5';'5';'5';'5';'5';'5';'5';'5';'5';'5']
   grp_col=['1';'2';'3';'4']
    [a1,a2,a3]=anova1(all_cs_stm_kin1,grp_col)
    
    
    %want to figure out why these have diff p-values
    %let's plot
    grp_mean=mean(cs_stm_kin1)
    grp_se=std(cs_stm_kin1)/sqrt(5)
    
    all_mean=mean(all_cs_stm_kin1)
    all_se=std(all_cs_stm_kin1)/sqrt(60)
    
    figure
    subplot(1,2,1); hold on
    bar(grp_mean)
    errorbar(grp_mean,grp_se)
        
    subplot(1,2,2); hold on
    bar(all_mean)
    errorbar(all_mean,all_se)
    set(gca,'ylim',[0 1])
    %the means are exactly the same but the different p-values 
    %are probably just a result of the much smaller std/se
    %for now we should go with the mean for each individual
    %or n=5
    
    grps=['cs_stm';'cs_non';'hc_stm';'hc_non']
for i=1:4
    for j=1:13
        eval(['[p2_',grps(i,:),'_kin',num2str(j),',tbl2_',grps(i,:),'_kin',num2str(j),...
            ',stats2_',grps(i,:),'_kin',num2str(j),']=friedman(',grps(i,:),'_kin',num2str(j),')'])
    end
end
%ok I spot checked a bunch of these in graphpad and though the
%the p-values weren't exact, they were relative, meaning when
% a p-value was high in matlab it was also high in graphpad and
%and vice versa

%now for multiple comparisons

fdr_cs_non=[p2_cs_non_kin1;
    p2_cs_non_kin10;
    p2_cs_non_kin11;
    p2_cs_non_kin12;
    p2_cs_non_kin13;
    p2_cs_non_kin2;
    p2_cs_non_kin3;
    p2_cs_non_kin4;
    p2_cs_non_kin5;
    p2_cs_non_kin6;
    p2_cs_non_kin7;
    p2_cs_non_kin8;
    p2_cs_non_kin9]
fdr_cs_stm=[p2_cs_stm_kin1;
    p2_cs_stm_kin10;
    p2_cs_stm_kin11;
    p2_cs_stm_kin12;
    p2_cs_stm_kin13;
    p2_cs_stm_kin2;
    p2_cs_stm_kin3;
    p2_cs_stm_kin4;
    p2_cs_stm_kin5;
    p2_cs_stm_kin6;
    p2_cs_stm_kin7;
    p2_cs_stm_kin8;
    p2_cs_stm_kin9]
fdr_hc_non=[p2_hc_non_kin1;
    p2_hc_non_kin10;
    p2_hc_non_kin11;
    p2_hc_non_kin12;
    p2_hc_non_kin13;
    p2_hc_non_kin2;
    p2_hc_non_kin3;
    p2_hc_non_kin4;
    p2_hc_non_kin5;
    p2_hc_non_kin6;
    p2_hc_non_kin7;
    p2_hc_non_kin8;
    p2_hc_non_kin9]
fdr_hc_stm=[p2_hc_stm_kin1;
    p2_hc_stm_kin10;
    p2_hc_stm_kin11;
    p2_hc_stm_kin12;
    p2_hc_stm_kin13;
    p2_hc_stm_kin2;
    p2_hc_stm_kin3;
    p2_hc_stm_kin4;
    p2_hc_stm_kin5;
    p2_hc_stm_kin6;
    p2_hc_stm_kin7;
    p2_hc_stm_kin8;
    p2_hc_stm_kin9]
fdr_all_cs_non=mafdr(fdr_cs_non)
fdr_all_cs_stm=mafdr(fdr_cs_stm)
fdr_all_hc_non=mafdr(fdr_hc_non)
fdr_all_hc_stm=mafdr(fdr_hc_stm)
%0.05/13 = 0.0038

%okay I think we have our stats
%cs stm has lots more corrected sig values than other groups
%most related to movement speed
    
cs_kin9_all=[cs_non_kin9;cs_stm_kin9]

[a,b,c]=anova2(cs_kin9_all,5)
[a,b,c]=anova2([cs_non_kin10';cs_stm_kin10'],4)
sbj='03'

sbjs_all=['03';'04';'05';'42';'43';'13';'15';'17';'18';'21';'22';'24';'25';'26';'29';'30';'20';'23';'27';'28';'36']

%this is to generate the lat variable
for i=1:2%:21
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',...
        sbjs_all(i,:),'/analysis/S1-VR_preproc/pro00087153_00',sbjs_all(i,:),...
        '_S1-VRdata_preprocessed.mat'')'])
    if sessioninfo.stimlat=='L'
        eval(['lat(i)=7'])
    elseif sessioninfo.stimlat=='R'
        eval(['lat(i)=18'])
    end
    clear metric* movement* session* trialData*
end
    

trial={'pre{1,1}';'stim{1,1}';'stim{1,2}';'post{1,1}'}
trial_lbl={'pre';'estim';'lstim';'post'};
for i=1%:21
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_all(i,:),'/analysis/S2-metrics/pro00087153_00',sbjs_all(i,:),'_S2-Metrics.mat'')'])
    eval(['load(''~/nr_data_analysis/data_analyzed/eeg/gen_03/data/pro00087153_00',sbjs_all(i,:),'/analysis/S1-VR_preproc/pro00087153_00',sbjs_all(i,:),'_S1-VRdata_preprocessed.mat'')'])
    for j=1:4
        for k=1:12
            eval(['data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},'(',num2str(k),',:)=trialData.eeg.data(movementstart.',trial{j},'(',num2str(k),')*1e3-2000:movementstart.',trial{j},'(',num2str(k),')*1e3+2000,7);'])
            eval(['data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},'(',num2str(k),',:)=trialData.eeg.data(movementstart.',trial{j},'(',num2str(k),')*1e3-2000:movementstart.',trial{j},'(',num2str(k),')*1e3+2000,18);'])
        end
        eval(['mean_data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},'=mean(data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},');'])
        eval(['mean_data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},'=mean(data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},');'])
        eval(['se_data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},'=std(data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},')/sqrt(4);'])
        eval(['se_data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},'=std(data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},')/sqrt(4);'])
    end
    clear metric* movement* session* trialData*
   
%lat=[7,7,18,18,7,18,18,7,18,18,18,7,7,7,7,7,7,18,7,18,7] %I got these from?? 
    
    figure
    set(gcf,'Position',[749 172 667 790]) 
    spi_c3=[1 3 5 7];
    spi_c4=[2 4 6 8];
    for j=1:4
        subplot(5,2,spi_c3(j))
        eval(['plot(data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{j},''')'])
        if j==1 & lat(i)==7
            title(['sbj',sbjs_all(i,:),' ',trial_lbl{j},' c3*'])
        elseif j==1 & lat(i)==18
                        title(['sbj',sbjs_all(i,:),' ',trial_lbl{j},' c3'])
        else
            title(trial_lbl{j})
        end
    end
    for j=1:4
        subplot(5,2,spi_c4(j))
        eval(['plot(data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{j},''')'])
        if j==1 & lat(i)==18
            title(['sbj',sbjs_all(i,:),' ',trial_lbl{j},' c4*'])
        elseif j==1 & lat(i)==7
            title(['sbj',sbjs_all(i,:),' ',trial_lbl{j},' c4'])
        else
            title(trial_lbl{j})
        end
    end
    subplot(5,2,9); hold on
    for k=1:4
        eval(['plot(mean_data_eeg_sbj',sbjs_all(i,:),'_c3_',trial_lbl{k},''')'])
    end
    legend('pre','early','late','post')
    subplot(5,2,10); hold on
    for k=1:4
        eval(['plot(mean_data_eeg_sbj',sbjs_all(i,:),'_c4_',trial_lbl{k},''')'])
    end
% %indicate contralateral
end
%ok what's needed here is:
0) make sure to fix the lat variable - can also look in session info
1) figure out what's going on with 42 and 43
2) the raw signal needs to be filtered
3) may also need to be z-scored to get everything in the same sampamplitude range
4) I would maybe plot the movement start times against the raw data and compare the individuals erp's you generate
5) read a paper on these to see how these are done
6) put shading around means curves
7) make sure to remove bad trials
%figure
        
        
        
        % if i==1
    %     title('03 pre reach 1')
    % else
    %     title(['reach ', num2str(i)])
    % end
    %end

        